filetype plugin on

let isWindowsHost = has('win32') || has('win16')

" vim-indent-guides configuration
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
let g:indent_guides_guide_size = 1

" vim-airline configuration
let g:airline_theme = 'base16'
let g:airline_powerline_fonts = 1

runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

set ai
set nu
set hlsearch
set incsearch
set colorcolumn=120
set cursorline
set cursorcolumn
set laststatus=2
set showcmd
set linebreak
set nowrap
set tabstop=2
set shiftwidth=2
set expandtab
set bg=dark
set printoptions=paper:letter,number:y,top:5pc,right:5pc,bottom:5pc,left:5pc
syntax on

if !has('gui_running')
  if !isWindowsHost
    set t_Co=256
  endif  
  colors seti
else
  set guioptions-=T
  if isWindowsHost
    set gfn=Cousine:h10:cANSI
    set printfont=Cousine:h9:cANSI
  else
    set gfn=Fantasque\ Sans\ Mono\ 11
    set printfont=Fantasque\ Sans\ Mono\ 11
  endif
  colors parsec
endif  

if isWindowsHost
  set directory=$USERPROFILE\\vimfiles\\swp//,.,C:\temp//
else
  set directory=~/.vim/swp//,.,/tmp//
endif

if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
  endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
  set fileencodings=ucs-bom,utf-8,latin1
endif


" Filetypes
au BufRead,BufNewFile *.json set filetype=js
au BufRead,BufNewFile *.emd set filetype=markdown
au BufRead,BufNewFile *.emd.expected set filetype=lisp
au BufRead,BufNewFile *.sbt set filetype=scala

if v:version >= 700
  set omnifunc=syntaxcomplete#Complete
  set completeopt=longest,menuone

  function! JSynPreceding()
    return synIDattr(synIDtrans(synID(line('.'), col('.') - 1, 1)), 'name')
  endfunction

  function! JSynFollowing()
    return synIDattr(synIDtrans(synID(line('.'), col('.'), 1)), 'name')
  endfunction

  " Comment Todo Constant String Identifier Function 
  " Type Statement Keyword PreProc Number Special
  function! PeriodComplete()
    if pumvisible()
      return '.'
    endif
  endfunction

  " CleverTab per http://vim.wikia.com/wiki/VimTip102
  function! CleverTab()
    if pumvisible()
      return "\<C-N>"
    endif
    if strpart( getline('.'), 0, col('.')-1 ) =~ '^\s*$'
      return "\<Tab>"
    elseif exists('&omnifunc') && &omnifunc != ''
      return "\<C-X>\<C-O>"
    else
      return "\<C-N>"
    endif
  endfunction
  " VsVim does not play well with this at all.
  "inoremap <Tab> <C-R>=CleverTab()<CR>
endif  
